// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  type CallReducerFlags,
  ConnectionId,
  DbConnectionBuilder,
  DbConnectionImpl,
  type DbContext,
  type ErrorContextInterface,
  type Event,
  type EventContextInterface,
  Identity,
  ProductType,
  ProductTypeElement,
  type ReducerEventContextInterface,
  SubscriptionBuilderImpl,
  type SubscriptionEventContextInterface,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
} from "@clockworklabs/spacetimedb-sdk";
export type Character = {
  userId: Identity,
  characterId: string,
  name: string,
  race: string,
  profession: string,
  specialization: string,
  startingRegion: string,
  createdAt: string,
  currentLocation: string,
  strength: number | undefined,
  dexterity: number | undefined,
  intelligence: number | undefined,
  constitution: number | undefined,
  wisdom: number | undefined,
  willpower: number | undefined,
  charisma: number | undefined,
  maxHealth: number | undefined,
  currentHealth: number | undefined,
  maxMana: number | undefined,
  currentMana: number | undefined,
  classAbilities: string | undefined,
  raceAbilities: string | undefined,
  specializationAbilities: string | undefined,
  level: number | undefined,
  xp: number | undefined,
  inventoryItems: string | undefined,
  head: string | undefined,
  shoulders: string | undefined,
  back: string | undefined,
  chest: string | undefined,
  arms: string | undefined,
  hands: string | undefined,
  legs: string | undefined,
  feet: string | undefined,
  rings: string | undefined,
  necklace: string | undefined,
  earrings: string | undefined,
  relic: string | undefined,
  primaryWeapon: string | undefined,
  secondaryWeapon: string | undefined,
};

/**
 * A namespace for generated helper functions.
 */
export namespace Character {
  /**
  * A function which returns this type represented as an AlgebraicType.
  * This function is derived from the AlgebraicType used to generate this type.
  */
  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createProductType([
      new ProductTypeElement("userId", AlgebraicType.createIdentityType()),
      new ProductTypeElement("characterId", AlgebraicType.createStringType()),
      new ProductTypeElement("name", AlgebraicType.createStringType()),
      new ProductTypeElement("race", AlgebraicType.createStringType()),
      new ProductTypeElement("profession", AlgebraicType.createStringType()),
      new ProductTypeElement("specialization", AlgebraicType.createStringType()),
      new ProductTypeElement("startingRegion", AlgebraicType.createStringType()),
      new ProductTypeElement("createdAt", AlgebraicType.createStringType()),
      new ProductTypeElement("currentLocation", AlgebraicType.createStringType()),
      new ProductTypeElement("strength", AlgebraicType.createOptionType(AlgebraicType.createI32Type())),
      new ProductTypeElement("dexterity", AlgebraicType.createOptionType(AlgebraicType.createI32Type())),
      new ProductTypeElement("intelligence", AlgebraicType.createOptionType(AlgebraicType.createI32Type())),
      new ProductTypeElement("constitution", AlgebraicType.createOptionType(AlgebraicType.createI32Type())),
      new ProductTypeElement("wisdom", AlgebraicType.createOptionType(AlgebraicType.createI32Type())),
      new ProductTypeElement("willpower", AlgebraicType.createOptionType(AlgebraicType.createI32Type())),
      new ProductTypeElement("charisma", AlgebraicType.createOptionType(AlgebraicType.createI32Type())),
      new ProductTypeElement("maxHealth", AlgebraicType.createOptionType(AlgebraicType.createI32Type())),
      new ProductTypeElement("currentHealth", AlgebraicType.createOptionType(AlgebraicType.createI32Type())),
      new ProductTypeElement("maxMana", AlgebraicType.createOptionType(AlgebraicType.createI32Type())),
      new ProductTypeElement("currentMana", AlgebraicType.createOptionType(AlgebraicType.createI32Type())),
      new ProductTypeElement("classAbilities", AlgebraicType.createOptionType(AlgebraicType.createStringType())),
      new ProductTypeElement("raceAbilities", AlgebraicType.createOptionType(AlgebraicType.createStringType())),
      new ProductTypeElement("specializationAbilities", AlgebraicType.createOptionType(AlgebraicType.createStringType())),
      new ProductTypeElement("level", AlgebraicType.createOptionType(AlgebraicType.createI32Type())),
      new ProductTypeElement("xp", AlgebraicType.createOptionType(AlgebraicType.createI32Type())),
      new ProductTypeElement("inventoryItems", AlgebraicType.createOptionType(AlgebraicType.createStringType())),
      new ProductTypeElement("head", AlgebraicType.createOptionType(AlgebraicType.createStringType())),
      new ProductTypeElement("shoulders", AlgebraicType.createOptionType(AlgebraicType.createStringType())),
      new ProductTypeElement("back", AlgebraicType.createOptionType(AlgebraicType.createStringType())),
      new ProductTypeElement("chest", AlgebraicType.createOptionType(AlgebraicType.createStringType())),
      new ProductTypeElement("arms", AlgebraicType.createOptionType(AlgebraicType.createStringType())),
      new ProductTypeElement("hands", AlgebraicType.createOptionType(AlgebraicType.createStringType())),
      new ProductTypeElement("legs", AlgebraicType.createOptionType(AlgebraicType.createStringType())),
      new ProductTypeElement("feet", AlgebraicType.createOptionType(AlgebraicType.createStringType())),
      new ProductTypeElement("rings", AlgebraicType.createOptionType(AlgebraicType.createStringType())),
      new ProductTypeElement("necklace", AlgebraicType.createOptionType(AlgebraicType.createStringType())),
      new ProductTypeElement("earrings", AlgebraicType.createOptionType(AlgebraicType.createStringType())),
      new ProductTypeElement("relic", AlgebraicType.createOptionType(AlgebraicType.createStringType())),
      new ProductTypeElement("primaryWeapon", AlgebraicType.createOptionType(AlgebraicType.createStringType())),
      new ProductTypeElement("secondaryWeapon", AlgebraicType.createOptionType(AlgebraicType.createStringType())),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: Character): void {
    Character.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): Character {
    return Character.getTypeScriptAlgebraicType().deserialize(reader);
  }

}


